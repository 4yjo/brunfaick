const assert = require('chai').assert;
const brunfaick = require('../../.');

describe('end-to-end > numwrap.b', () => {
  it('Should return the expected output.', () => {
    const program = `
    >>>>+>+++>+++>>>>>+++[
      >,+>++++[>++++<-]>[<<[-[->]]>[<]>-]<<[
        >+>+>>+>+[<<<<]<+>>[+<]<[>]>+[[>>>]>>+[<<<<]>-]+<+>>>-[
          <<+[>]>>+<<<+<+<--------[
            <<-<<+[>]>+<<-<<-[
              <<<+<-[>>]<-<-<<<-<----[
                <<<->>>>+<-[
                  <<<+[>]>+<<+<-<-[
                    <<+<-<+[>>]<+<<<<+<-[
                      <<-[>]>>-<<<-<-<-[
                        <<<+<-[>>]<+<<<+<+<-[
                          <<<<+[>]<-<<-[
                            <<+[>]>>-<<<<-<-[
                              >>>>>+<-<<<+<-[
                                >>+<<-[
                                  <<-<-[>]>+<<-<-<-[
                                    <<+<+[>]<+<+<-[
                                      >>-<-<-[
                                        <<-[>]<+<++++[<-------->-]++<[
                                          <<+[>]>>-<-<<<<-[
                                            <<-<<->>>>-[
                                              <<<<+[>]>+<<<<-[
                                                <<+<<-[>>]<+<<<<<-[
                                                  >>>>-<<<-<-
      ]]]]]]]]]]]]]]]]]]]]]]>[>[[[<<<<]>+>>[>>>>>]<-]<]>>>+>>>>>>>+>]<
    ]<[-]<<<<<<<++<+++<+++[
      [>]>>>>>>++++++++[<<++++>++++++>-]<-<<[-[<+>>.<-]]<<<<[
        -[-[>+<-]>]>>>>>[.[>]]<<[<+>-]>>>[<<++[<+>--]>>-]
        <<[->+<[<++>-]]<<<[<+>-]<<<<
      ]>>+>>>--[<+>---]<.>>[[-]<<]<
    ]
    [Enter a number using ()-./0123456789abcdef and space, and hit return.
    Daniel B Cristofani (cristofdathevanetdotcom)
    http://www.hevanet.com/cristofd/brainfuck/]
    `;

    const input = '123456789';

    const output = brunfaick(program, input);

    const expected = '                /\\\n                \\/\\\n              /\\   \n              \\/\\\n            /\\ \\/\n              \\\n          /    \n          \\/\\\n        /  \\/\n        \\/\\\n       \\  /\n      \\/\\\n    /\\   \n     /\\\n  /\\  /\n   / \n \\ \\/\n  \\\n   \n';

    assert.strictEqual(expected, output);
  });
});

